plugins {
    id 'java'
    id 'jacoco'
    id 'net.researchgate.release' version '2.8.1'
}

apply from: "https://raw.githubusercontent.com/gocd/gocd-plugin-gradle-task-helpers/master/helper.gradle?_=${(int) (new Date().toInstant().epochSecond / 60)}"

group 'com.thoughtworks.com'

sourceCompatibility = 1.9
targetCompatibility = 1.9

gocdPlugin {
    id = 'git-path'
    pluginVersion = '2.1.0'
    goCdVersion = '18.10.0'
    name = 'Git Path Material Plugin'
    description = 'Plugin that polls a Git repository and triggers pipelines based on sub-directory path matches'
    vendorName = 'ThoughtWorks, Inc / GoCD contributors'
    vendorUrl = 'https://github.com/' + (System.getenv('GITHUB_USER') ?: 'TWChennai') + '/gocd-git-path-material-plugin'

    githubRepo {
        owner = System.getenv('GITHUB_USER') ?: 'TWChennai'
        repo = 'gocd-git-path-material-plugin'
        token = System.getenv('GITHUB_TOKEN') ?: 'bad-token'
    }

    pluginProject = project

    prerelease = !"No".equalsIgnoreCase(System.getenv('PRERELEASE'))
    assetsToRelease = [project.tasks.jar]
}

// specify the version of your project
allprojects {
    version = gocdPlugin.fullVersion(project)
}

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

jacocoTestReport {
    reports {
        xml.enabled = false
        csv.enabled = false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

check.dependsOn jacocoTestReport

dependencies {
    implementation "cd.go.plugin:go-plugin-api:${gocdPlugin.goCdVersion}"

    implementation 'in.ashwanthkumar:git-cmd:2.0'
    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    implementation 'org.apache.commons:commons-lang3:3.9'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-core:2.1'
    testImplementation 'org.mockito:mockito-core:2.28.2'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.2'
    testImplementation 'org.powermock:powermock-core:2.0.2'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.2'
}

jar {
    from(configurations.runtimeClasspath) {
        into "lib/"
    }
}

task startGoCd(dependsOn: build, type: Exec) {
    dependsOn build
    environment("PLUGIN_VERSION", "$version")
    commandLine "docker-compose", "up", "-d"
}

task restartGoCd(dependsOn: build, type: Exec) {
    dependsOn build
    environment("PLUGIN_VERSION", "$version")
    commandLine "docker-compose", "restart"
}

task stopGoCd(type: Exec) {
    environment("PLUGIN_VERSION", "$version")
    commandLine "docker-compose", "stop"
}